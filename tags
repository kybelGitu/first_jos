!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon6
ALT	kern/console.c	218;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
C	kern/console.c	285;"	d	file:
CAPSLOCK	kern/console.c	220;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	26;"	d	file:
COM_DLL	kern/console.c	30;"	d	file:
COM_DLM	kern/console.c	31;"	d	file:
COM_FCR	kern/console.c	35;"	d	file:
COM_IER	kern/console.c	32;"	d	file:
COM_IER_RDI	kern/console.c	33;"	d	file:
COM_IIR	kern/console.c	34;"	d	file:
COM_LCR	kern/console.c	36;"	d	file:
COM_LCR_DLAB	kern/console.c	37;"	d	file:
COM_LCR_WLEN8	kern/console.c	38;"	d	file:
COM_LSR	kern/console.c	43;"	d	file:
COM_LSR_DATA	kern/console.c	44;"	d	file:
COM_LSR_TSRE	kern/console.c	46;"	d	file:
COM_LSR_TXRDY	kern/console.c	45;"	d	file:
COM_MCR	kern/console.c	39;"	d	file:
COM_MCR_DTR	kern/console.c	41;"	d	file:
COM_MCR_OUT2	kern/console.c	42;"	d	file:
COM_MCR_RTS	kern/console.c	40;"	d	file:
COM_RX	kern/console.c	28;"	d	file:
COM_TX	kern/console.c	29;"	d	file:
CONSBUFSIZE	kern/console.c	385;"	d	file:
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	217;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	224;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENVGENSHIFT	kern/env.c	20;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	28;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon3
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon3
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon3
ENV_PASTE3	kern/env.h	26;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon3
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon3
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_RTC	kern/kclock.h	9;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=3$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	70;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	214;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon4
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	221;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
O_ACCMODE	inc/lib.h	49;"	d
O_CREAT	inc/lib.h	51;"	d
O_EXCL	inc/lib.h	53;"	d
O_MKDIR	inc/lib.h	54;"	d
O_RDONLY	inc/lib.h	46;"	d
O_RDWR	inc/lib.h	48;"	d
O_TRUNC	inc/lib.h	52;"	d
O_WRONLY	inc/lib.h	47;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Tue Sep 25 12:21:10 EDT 2018$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_RET_ADDR	obj/kern/kernel.asm	/^			PTE_RET_ADDR = (pte_t*) page_alloc(ALLOC_ZERO);$/;"	d
PTE_RET_ADDR	obj/kern/kernel.asm	/^	PTE_RET_ADDR = (pte_t*) &PDE_ADDR[PTX(va)];$/;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SCROLLLOCK	kern/console.c	222;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	216;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon4
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon4
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon4
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon4
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TOP	GNUmakefile	/^TOP = .$/;"	m
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	20;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	69;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^                        base = 8;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon5	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon5	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curenv	kern/env.c	/^struct Env *curenv = NULL;		\/\/ The current env$/;"	v	typeref:struct:Env
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t*) *ebp;$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
exit	lib/exit.c	/^exit(void)$/;"	f
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f	user/pointers.c	/^f(void)$/;"	f
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 10 11 00       	mov    $0x111000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	b8 2c 00 10 f0       	mov    $0xf010002c,%eax$/;"	l
f010002a	obj/kern/kernel.asm	/^f010002a:	ff e0                	jmp    *%eax$/;"	l
f010002c	obj/kern/kernel.asm	/^f010002c <relocated>:$/;"	l
f010002c	obj/kern/kernel.asm	/^f010002c:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100031	obj/kern/kernel.asm	/^f0100031:	bc 00 10 11 f0       	mov    $0xf0111000,%esp$/;"	l
f0100036	obj/kern/kernel.asm	/^f0100036:	e8 02 00 00 00       	call   f010003d <i386_init>$/;"	l
f010003b	obj/kern/kernel.asm	/^f010003b <spin>:$/;"	l
f010003b	obj/kern/kernel.asm	/^f010003b:	eb fe                	jmp    f010003b <spin>$/;"	l
f010003d	obj/kern/kernel.asm	/^f010003d <i386_init>:$/;"	l
f010003d	obj/kern/kernel.asm	/^f010003d:	55                   	push   %ebp$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	b8 40 39 11 f0       	mov    $0xf0113940,%eax$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	2d 00 33 11 f0       	sub    $0xf0113300,%eax$/;"	l
f010004d	obj/kern/kernel.asm	/^f010004d:	50                   	push   %eax$/;"	l
f010004e	obj/kern/kernel.asm	/^f010004e:	6a 00                	push   $0x0$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	68 00 33 11 f0       	push   $0xf0113300$/;"	l
f0100055	obj/kern/kernel.asm	/^f0100055:	e8 89 16 00 00       	call   f01016e3 <memset>$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	e8 96 04 00 00       	call   f01004f5 <cons_init>$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100062	obj/kern/kernel.asm	/^f0100062:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	68 80 1b 10 f0       	push   $0xf0101b80$/;"	l
f010006c	obj/kern/kernel.asm	/^f010006c:	e8 22 0b 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100071	obj/kern/kernel.asm	/^f0100071:	e8 84 08 00 00       	call   f01008fa <mem_init>$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100079	obj/kern/kernel.asm	/^f0100079:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	6a 00                	push   $0x0$/;"	l
f010007e	obj/kern/kernel.asm	/^f010007e:	e8 1a 07 00 00       	call   f010079d <monitor>$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	eb f1                	jmp    f0100079 <i386_init+0x3c>$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088 <_panic>:$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	55                   	push   %ebp$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	89 e5                	mov    %esp,%ebp$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	56                   	push   %esi$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	53                   	push   %ebx$/;"	l
f010008d	obj/kern/kernel.asm	/^f010008d:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	83 3d 44 39 11 f0 00 	cmpl   $0x0,0xf0113944$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	75 37                	jne    f01000d0 <_panic+0x48>$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	89 35 44 39 11 f0    	mov    %esi,0xf0113944$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	fa                   	cli    $/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	fc                   	cld    $/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01000aa	obj/kern/kernel.asm	/^f01000aa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	68 9b 1b 10 f0       	push   $0xf0101b9b$/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	e8 dc 0a 00 00       	call   f0100b93 <cprintf>$/;"	l
f01000b7	obj/kern/kernel.asm	/^f01000b7:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	53                   	push   %ebx$/;"	l
f01000bb	obj/kern/kernel.asm	/^f01000bb:	56                   	push   %esi$/;"	l
f01000bc	obj/kern/kernel.asm	/^f01000bc:	e8 ac 0a 00 00       	call   f0100b6d <vcprintf>$/;"	l
f01000c1	obj/kern/kernel.asm	/^f01000c1:	c7 04 24 a3 1e 10 f0 	movl   $0xf0101ea3,(%esp)$/;"	l
f01000c8	obj/kern/kernel.asm	/^f01000c8:	e8 c6 0a 00 00       	call   f0100b93 <cprintf>$/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000d0	obj/kern/kernel.asm	/^f01000d0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	6a 00                	push   $0x0$/;"	l
f01000d5	obj/kern/kernel.asm	/^f01000d5:	e8 c3 06 00 00       	call   f010079d <monitor>$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	eb f1                	jmp    f01000d0 <_panic+0x48>$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df <_warn>:$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	55                   	push   %ebp$/;"	l
f01000e0	obj/kern/kernel.asm	/^f01000e0:	89 e5                	mov    %esp,%ebp$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	53                   	push   %ebx$/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	68 b3 1b 10 f0       	push   $0xf0101bb3$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	e8 9a 0a 00 00       	call   f0100b93 <cprintf>$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	53                   	push   %ebx$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	e8 68 0a 00 00       	call   f0100b6d <vcprintf>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	c7 04 24 a3 1e 10 f0 	movl   $0xf0101ea3,(%esp)$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	e8 82 0a 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	c9                   	leave  $/;"	l
f0100118	obj/kern/kernel.asm	/^f0100118:	c3                   	ret    $/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119 <serial_proc_data>:$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	55                   	push   %ebp$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	89 e5                	mov    %esp,%ebp$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	ec                   	in     (%dx),%al$/;"	l
f0100122	obj/kern/kernel.asm	/^f0100122:	a8 01                	test   $0x1,%al$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	74 0b                	je     f0100131 <serial_proc_data+0x18>$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	ec                   	in     (%dx),%al$/;"	l
f010012c	obj/kern/kernel.asm	/^f010012c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	eb 05                	jmp    f0100136 <serial_proc_data+0x1d>$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100136	obj/kern/kernel.asm	/^f0100136:	5d                   	pop    %ebp$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	c3                   	ret    $/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138 <cons_intr>:$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	55                   	push   %ebp$/;"	l
f0100139	obj/kern/kernel.asm	/^f0100139:	89 e5                	mov    %esp,%ebp$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	53                   	push   %ebx$/;"	l
f010013c	obj/kern/kernel.asm	/^f010013c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	89 c3                	mov    %eax,%ebx$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	eb 2b                	jmp    f010016e <cons_intr+0x36>$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	85 c0                	test   %eax,%eax$/;"	l
f0100145	obj/kern/kernel.asm	/^f0100145:	74 27                	je     f010016e <cons_intr+0x36>$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	8b 0d 24 35 11 f0    	mov    0xf0113524,%ecx$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0100150	obj/kern/kernel.asm	/^f0100150:	89 15 24 35 11 f0    	mov    %edx,0xf0113524$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	88 81 20 33 11 f0    	mov    %al,-0xfeecce0(%ecx)$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	75 0a                	jne    f010016e <cons_intr+0x36>$/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	c7 05 24 35 11 f0 00 	movl   $0x0,0xf0113524$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	00 00 00 $/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	ff d3                	call   *%ebx$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	75 ce                	jne    f0100143 <cons_intr+0xb>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	5b                   	pop    %ebx$/;"	l
f0100179	obj/kern/kernel.asm	/^f0100179:	5d                   	pop    %ebp$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	c3                   	ret    $/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b <kbd_proc_data>:$/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	ec                   	in     (%dx),%al$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	a8 01                	test   $0x1,%al$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	0f 84 f8 00 00 00    	je     f0100281 <kbd_proc_data+0x106>$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	a8 20                	test   $0x20,%al$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	0f 85 f6 00 00 00    	jne    f0100287 <kbd_proc_data+0x10c>$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	ec                   	in     (%dx),%al$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	89 c2                	mov    %eax,%edx$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	3c e0                	cmp    $0xe0,%al$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	75 0d                	jne    f01001aa <kbd_proc_data+0x2f>$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	83 0d 00 33 11 f0 40 	orl    $0x40,0xf0113300$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	c3                   	ret    $/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	55                   	push   %ebp$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	53                   	push   %ebx$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	84 c0                	test   %al,%al$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	79 36                	jns    f01001eb <kbd_proc_data+0x70>$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	8b 0d 00 33 11 f0    	mov    0xf0113300,%ecx$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	89 cb                	mov    %ecx,%ebx$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	83 e3 40             	and    $0x40,%ebx$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	85 db                	test   %ebx,%ebx$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	0f b6 82 20 1d 10 f0 	movzbl -0xfefe2e0(%edx),%eax$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	83 c8 40             	or     $0x40,%eax$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	f7 d0                	not    %eax$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	21 c8                	and    %ecx,%eax$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	a3 00 33 11 f0       	mov    %eax,0xf0113300$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	e9 a4 00 00 00       	jmp    f010028f <kbd_proc_data+0x114>$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	8b 0d 00 33 11 f0    	mov    0xf0113300,%ecx$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	74 0e                	je     f0100204 <kbd_proc_data+0x89>$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	89 c2                	mov    %eax,%edx$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01001fe	obj/kern/kernel.asm	/^f01001fe:	89 0d 00 33 11 f0    	mov    %ecx,0xf0113300$/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	0f b6 82 20 1d 10 f0 	movzbl -0xfefe2e0(%edx),%eax$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	0b 05 00 33 11 f0    	or     0xf0113300,%eax$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	0f b6 8a 20 1c 10 f0 	movzbl -0xfefe3e0(%edx),%ecx$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	31 c8                	xor    %ecx,%eax$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	a3 00 33 11 f0       	mov    %eax,0xf0113300$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	89 c1                	mov    %eax,%ecx$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	8b 0c 8d 00 1c 10 f0 	mov    -0xfefe400(,%ecx,4),%ecx$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	a8 08                	test   $0x8,%al$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	74 1b                	je     f0100254 <kbd_proc_data+0xd9>$/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	89 da                	mov    %ebx,%edx$/;"	l
f010023b	obj/kern/kernel.asm	/^f010023b:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	77 05                	ja     f0100248 <kbd_proc_data+0xcd>$/;"	l
f0100243	obj/kern/kernel.asm	/^f0100243:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	eb 0c                	jmp    f0100254 <kbd_proc_data+0xd9>$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	83 ea 41             	sub    $0x41,%edx$/;"	l
f010024b	obj/kern/kernel.asm	/^f010024b:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	f7 d0                	not    %eax$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	a8 06                	test   $0x6,%al$/;"	l
f0100258	obj/kern/kernel.asm	/^f0100258:	75 33                	jne    f010028d <kbd_proc_data+0x112>$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	75 2b                	jne    f010028d <kbd_proc_data+0x112>$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	68 cd 1b 10 f0       	push   $0xf0101bcd$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	e8 24 09 00 00       	call   f0100b93 <cprintf>$/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100274	obj/kern/kernel.asm	/^f0100274:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	ee                   	out    %al,(%dx)$/;"	l
f010027a	obj/kern/kernel.asm	/^f010027a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	89 d8                	mov    %ebx,%eax$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	eb 0e                	jmp    f010028f <kbd_proc_data+0x114>$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	c3                   	ret    $/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	c3                   	ret    $/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	89 d8                	mov    %ebx,%eax$/;"	l
f010028f	obj/kern/kernel.asm	/^f010028f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	c9                   	leave  $/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	c3                   	ret    $/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294 <cons_putc>:$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	55                   	push   %ebp$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	89 e5                	mov    %esp,%ebp$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	57                   	push   %edi$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	56                   	push   %esi$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	53                   	push   %ebx$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010029d	obj/kern/kernel.asm	/^f010029d:	89 c7                	mov    %eax,%edi$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	eb 09                	jmp    f01002b9 <cons_putc+0x25>$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	89 ca                	mov    %ecx,%edx$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	ec                   	in     (%dx),%al$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	ec                   	in     (%dx),%al$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	ec                   	in     (%dx),%al$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	ec                   	in     (%dx),%al$/;"	l
f01002b6	obj/kern/kernel.asm	/^f01002b6:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	89 f2                	mov    %esi,%edx$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	ec                   	in     (%dx),%al$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	a8 20                	test   $0x20,%al$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	75 08                	jne    f01002c8 <cons_putc+0x34>$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	7e e8                	jle    f01002b0 <cons_putc+0x1c>$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	89 f8                	mov    %edi,%eax$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	ee                   	out    %al,(%dx)$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	eb 09                	jmp    f01002ed <cons_putc+0x59>$/;"	l
f01002e4	obj/kern/kernel.asm	/^f01002e4:	89 ca                	mov    %ecx,%edx$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	ec                   	in     (%dx),%al$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	ec                   	in     (%dx),%al$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	ec                   	in     (%dx),%al$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	ec                   	in     (%dx),%al$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	89 f2                	mov    %esi,%edx$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	ec                   	in     (%dx),%al$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f01002f6	obj/kern/kernel.asm	/^f01002f6:	7f 04                	jg     f01002fc <cons_putc+0x68>$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	84 c0                	test   %al,%al$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	79 e8                	jns    f01002e4 <cons_putc+0x50>$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	ee                   	out    %al,(%dx)$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	ee                   	out    %al,(%dx)$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	ee                   	out    %al,(%dx)$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	89 fa                	mov    %edi,%edx$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	89 f8                	mov    %edi,%eax$/;"	l
f0100321	obj/kern/kernel.asm	/^f0100321:	80 cc 07             	or     $0x7,%ah$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	85 d2                	test   %edx,%edx$/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	89 f8                	mov    %edi,%eax$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	74 74                	je     f01003a7 <cons_putc+0x113>$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	7f 0a                	jg     f0100342 <cons_putc+0xae>$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	74 14                	je     f0100351 <cons_putc+0xbd>$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	e9 99 00 00 00       	jmp    f01003db <cons_putc+0x147>$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	74 3a                	je     f0100381 <cons_putc+0xed>$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	74 3d                	je     f0100389 <cons_putc+0xf5>$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	e9 8a 00 00 00       	jmp    f01003db <cons_putc+0x147>$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	0f b7 05 28 35 11 f0 	movzwl 0xf0113528,%eax$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	66 85 c0             	test   %ax,%ax$/;"	l
f010035b	obj/kern/kernel.asm	/^f010035b:	0f 84 e6 00 00 00    	je     f0100447 <cons_putc+0x1b3>$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	66 a3 28 35 11 f0    	mov    %ax,0xf0113528$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	83 cf 20             	or     $0x20,%edi$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	8b 15 2c 35 11 f0    	mov    0xf011352c,%edx$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	eb 78                	jmp    f01003f9 <cons_putc+0x165>$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	66 83 05 28 35 11 f0 	addw   $0x50,0xf0113528$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	50 $/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	0f b7 05 28 35 11 f0 	movzwl 0xf0113528,%eax$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	66 a3 28 35 11 f0    	mov    %ax,0xf0113528$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	eb 52                	jmp    f01003f9 <cons_putc+0x165>$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	e8 e3 fe ff ff       	call   f0100294 <cons_putc>$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	e8 d9 fe ff ff       	call   f0100294 <cons_putc>$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	e8 cf fe ff ff       	call   f0100294 <cons_putc>$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003ca	obj/kern/kernel.asm	/^f01003ca:	e8 c5 fe ff ff       	call   f0100294 <cons_putc>$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	e8 bb fe ff ff       	call   f0100294 <cons_putc>$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	eb 1e                	jmp    f01003f9 <cons_putc+0x165>$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	0f b7 05 28 35 11 f0 	movzwl 0xf0113528,%eax$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	66 89 15 28 35 11 f0 	mov    %dx,0xf0113528$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	8b 15 2c 35 11 f0    	mov    0xf011352c,%edx$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	66 81 3d 28 35 11 f0 	cmpw   $0x7cf,0xf0113528$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	cf 07 $/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	76 43                	jbe    f0100447 <cons_putc+0x1b3>$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	a1 2c 35 11 f0       	mov    0xf011352c,%eax$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	68 00 0f 00 00       	push   $0xf00$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	52                   	push   %edx$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	50                   	push   %eax$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	e8 12 13 00 00       	call   f0101730 <memmove>$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	8b 15 2c 35 11 f0    	mov    0xf011352c,%edx$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	83 c0 02             	add    $0x2,%eax$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	39 d0                	cmp    %edx,%eax$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	75 f4                	jne    f0100433 <cons_putc+0x19f>$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	66 83 2d 28 35 11 f0 	subw   $0x50,0xf0113528$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	50 $/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	8b 0d 30 35 11 f0    	mov    0xf0113530,%ecx$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	89 ca                	mov    %ecx,%edx$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	ee                   	out    %al,(%dx)$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	0f b7 1d 28 35 11 f0 	movzwl 0xf0113528,%ebx$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	89 d8                	mov    %ebx,%eax$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	89 f2                	mov    %esi,%edx$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	ee                   	out    %al,(%dx)$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	89 ca                	mov    %ecx,%edx$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	ee                   	out    %al,(%dx)$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	89 d8                	mov    %ebx,%eax$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	89 f2                	mov    %esi,%edx$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	ee                   	out    %al,(%dx)$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	5b                   	pop    %ebx$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	5e                   	pop    %esi$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	5f                   	pop    %edi$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	5d                   	pop    %ebp$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	c3                   	ret    $/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d <serial_intr>:$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	80 3d 34 35 11 f0 00 	cmpb   $0x0,0xf0113534$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	74 11                	je     f0100497 <serial_intr+0x1a>$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	55                   	push   %ebp$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	89 e5                	mov    %esp,%ebp$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	b8 19 01 10 f0       	mov    $0xf0100119,%eax$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	e8 a2 fc ff ff       	call   f0100138 <cons_intr>$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	c9                   	leave  $/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	f3 c3                	repz ret $/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499 <kbd_intr>:$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	55                   	push   %ebp$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	89 e5                	mov    %esp,%ebp$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	b8 7b 01 10 f0       	mov    $0xf010017b,%eax$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	e8 8f fc ff ff       	call   f0100138 <cons_intr>$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	c9                   	leave  $/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	c3                   	ret    $/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab <cons_getc>:$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	55                   	push   %ebp$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	e8 c7 ff ff ff       	call   f010047d <serial_intr>$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	e8 de ff ff ff       	call   f0100499 <kbd_intr>$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	a1 20 35 11 f0       	mov    0xf0113520,%eax$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	3b 05 24 35 11 f0    	cmp    0xf0113524,%eax$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	74 26                	je     f01004ee <cons_getc+0x43>$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	89 15 20 35 11 f0    	mov    %edx,0xf0113520$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	0f b6 88 20 33 11 f0 	movzbl -0xfeecce0(%eax),%ecx$/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	89 c8                	mov    %ecx,%eax$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	75 11                	jne    f01004f3 <cons_getc+0x48>$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	c7 05 20 35 11 f0 00 	movl   $0x0,0xf0113520$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	00 00 00 $/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	eb 05                	jmp    f01004f3 <cons_getc+0x48>$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	c9                   	leave  $/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	c3                   	ret    $/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5 <cons_init>:$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	55                   	push   %ebp$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	57                   	push   %edi$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	56                   	push   %esi$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	53                   	push   %ebx$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	5a a5 $/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100519	obj/kern/kernel.asm	/^f0100519:	74 11                	je     f010052c <cons_init+0x37>$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	c7 05 30 35 11 f0 b4 	movl   $0x3b4,0xf0113530$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	03 00 00 $/;"	l
f0100525	obj/kern/kernel.asm	/^f0100525:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	eb 16                	jmp    f0100542 <cons_init+0x4d>$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	c7 05 30 35 11 f0 d4 	movl   $0x3d4,0xf0113530$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	03 00 00 $/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	8b 3d 30 35 11 f0    	mov    0xf0113530,%edi$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	89 fa                	mov    %edi,%edx$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	ee                   	out    %al,(%dx)$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	89 da                	mov    %ebx,%edx$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	ec                   	in     (%dx),%al$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	89 fa                	mov    %edi,%edx$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	ee                   	out    %al,(%dx)$/;"	l
f0100564	obj/kern/kernel.asm	/^f0100564:	89 da                	mov    %ebx,%edx$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	ec                   	in     (%dx),%al$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	89 35 2c 35 11 f0    	mov    %esi,0xf011352c$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	09 c8                	or     %ecx,%eax$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	66 a3 28 35 11 f0    	mov    %ax,0xf0113528$/;"	l
f0100578	obj/kern/kernel.asm	/^f0100578:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f010057d	obj/kern/kernel.asm	/^f010057d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	89 f2                	mov    %esi,%edx$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	ee                   	out    %al,(%dx)$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	ee                   	out    %al,(%dx)$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	89 da                	mov    %ebx,%edx$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	ee                   	out    %al,(%dx)$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	ee                   	out    %al,(%dx)$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	ee                   	out    %al,(%dx)$/;"	l
f01005b3	obj/kern/kernel.asm	/^f01005b3:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	ee                   	out    %al,(%dx)$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	ee                   	out    %al,(%dx)$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	ec                   	in     (%dx),%al$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	89 c1                	mov    %eax,%ecx$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	3c ff                	cmp    $0xff,%al$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	0f 95 05 34 35 11 f0 	setne  0xf0113534$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	89 f2                	mov    %esi,%edx$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	ec                   	in     (%dx),%al$/;"	l
f01005dd	obj/kern/kernel.asm	/^f01005dd:	89 da                	mov    %ebx,%edx$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	ec                   	in     (%dx),%al$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	75 10                	jne    f01005f5 <cons_init+0x100>$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	68 d9 1b 10 f0       	push   $0xf0101bd9$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	e8 a1 05 00 00       	call   f0100b93 <cprintf>$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	5b                   	pop    %ebx$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	5e                   	pop    %esi$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	5f                   	pop    %edi$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	5d                   	pop    %ebp$/;"	l
f01005fc	obj/kern/kernel.asm	/^f01005fc:	c3                   	ret    $/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd <cputchar>:$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	55                   	push   %ebp$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100603	obj/kern/kernel.asm	/^f0100603:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100606	obj/kern/kernel.asm	/^f0100606:	e8 89 fc ff ff       	call   f0100294 <cons_putc>$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	c9                   	leave  $/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	c3                   	ret    $/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d <getchar>:$/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d:	55                   	push   %ebp$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	e8 93 fe ff ff       	call   f01004ab <cons_getc>$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	85 c0                	test   %eax,%eax$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	74 f7                	je     f0100613 <getchar+0x6>$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	c9                   	leave  $/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	c3                   	ret    $/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e <iscons>:$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	55                   	push   %ebp$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	5d                   	pop    %ebp$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	c3                   	ret    $/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628 <mon_help>:$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	55                   	push   %ebp$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	89 e5                	mov    %esp,%ebp$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	68 20 1e 10 f0       	push   $0xf0101e20$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	68 3e 1e 10 f0       	push   $0xf0101e3e$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	68 43 1e 10 f0       	push   $0xf0101e43$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	e8 51 05 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	68 e4 1e 10 f0       	push   $0xf0101ee4$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	68 4c 1e 10 f0       	push   $0xf0101e4c$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	68 43 1e 10 f0       	push   $0xf0101e43$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	e8 3a 05 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	68 0c 1f 10 f0       	push   $0xf0101f0c$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	68 55 1e 10 f0       	push   $0xf0101e55$/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	68 43 1e 10 f0       	push   $0xf0101e43$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	e8 23 05 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	c9                   	leave  $/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	c3                   	ret    $/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677 <mon_kerninfo>:$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	55                   	push   %ebp$/;"	l
f0100678	obj/kern/kernel.asm	/^f0100678:	89 e5                	mov    %esp,%ebp$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	68 63 1e 10 f0       	push   $0xf0101e63$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	e8 0c 05 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	83 c4 08             	add    $0x8,%esp$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f:	68 30 1f 10 f0       	push   $0xf0101f30$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	e8 fa 04 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f01006a1	obj/kern/kernel.asm	/^f01006a1:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	68 58 1f 10 f0       	push   $0xf0101f58$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	e8 e3 04 00 00       	call   f0100b93 <cprintf>$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	68 71 1b 10 00       	push   $0x101b71$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	68 71 1b 10 f0       	push   $0xf0101b71$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	68 7c 1f 10 f0       	push   $0xf0101f7c$/;"	l
f01006c2	obj/kern/kernel.asm	/^f01006c2:	e8 cc 04 00 00       	call   f0100b93 <cprintf>$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	68 00 33 11 00       	push   $0x113300$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	68 00 33 11 f0       	push   $0xf0113300$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	68 a0 1f 10 f0       	push   $0xf0101fa0$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	e8 b5 04 00 00       	call   f0100b93 <cprintf>$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	68 40 39 11 00       	push   $0x113940$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	68 40 39 11 f0       	push   $0xf0113940$/;"	l
f01006eb	obj/kern/kernel.asm	/^f01006eb:	68 c4 1f 10 f0       	push   $0xf0101fc4$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	e8 9e 04 00 00       	call   f0100b93 <cprintf>$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	b8 3f 3d 11 f0       	mov    $0xf0113d3f,%eax$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	85 c0                	test   %eax,%eax$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	50                   	push   %eax$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	68 e8 1f 10 f0       	push   $0xf0101fe8$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	e8 73 04 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	c9                   	leave  $/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	c3                   	ret    $/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727 <mon_backtrace>:$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	55                   	push   %ebp$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	89 e5                	mov    %esp,%ebp$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	57                   	push   %edi$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	56                   	push   %esi$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	53                   	push   %ebx$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100730	obj/kern/kernel.asm	/^f0100730:	89 e8                	mov    %ebp,%eax$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	89 c6                	mov    %eax,%esi$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	ff 30                	pushl  (%eax)$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	50                   	push   %eax$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	68 14 20 10 f0       	push   $0xf0102014$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	e8 52 04 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	eb 46                	jmp    f010078c <mon_backtrace+0x65>$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	ff 36                	pushl  (%esi)$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	68 7c 1e 10 f0       	push   $0xf0101e7c$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	e8 3b 04 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	8d 5e 08             	lea    0x8(%esi),%ebx$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	8d 7e 1c             	lea    0x1c(%esi),%edi$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	ff 33                	pushl  (%ebx)$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	68 9a 1e 10 f0       	push   $0xf0101e9a$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	e8 23 04 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	75 e7                	jne    f0100761 <mon_backtrace+0x3a>$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	68 a2 1e 10 f0       	push   $0xf0101ea2$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	e8 0c 04 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	8b 36                	mov    (%esi),%esi$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	83 c4 10             	add    $0x10,%esp$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	85 f6                	test   %esi,%esi$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	75 b6                	jne    f0100746 <mon_backtrace+0x1f>$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100798	obj/kern/kernel.asm	/^f0100798:	5b                   	pop    %ebx$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	5e                   	pop    %esi$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	5f                   	pop    %edi$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	5d                   	pop    %ebp$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	c3                   	ret    $/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d <monitor>:$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	55                   	push   %ebp$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	89 e5                	mov    %esp,%ebp$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	57                   	push   %edi$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	56                   	push   %esi$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	53                   	push   %ebx$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	83 ec 58             	sub    $0x58,%esp$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	68 34 20 10 f0       	push   $0xf0102034$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	e8 e3 03 00 00       	call   f0100b93 <cprintf>$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	c7 04 24 58 20 10 f0 	movl   $0xf0102058,(%esp)$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	e8 d7 03 00 00       	call   f0100b93 <cprintf>$/;"	l
f01007bc	obj/kern/kernel.asm	/^f01007bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	68 a5 1e 10 f0       	push   $0xf0101ea5$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	e8 c0 0c 00 00       	call   f010148c <readline>$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	89 c3                	mov    %eax,%ebx$/;"	l
f01007ce	obj/kern/kernel.asm	/^f01007ce:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	85 c0                	test   %eax,%eax$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	74 ea                	je     f01007bf <monitor+0x22>$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	eb 0a                	jmp    f01007ed <monitor+0x50>$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	89 f7                	mov    %esi,%edi$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	89 fe                	mov    %edi,%esi$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	84 c0                	test   %al,%al$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	74 63                	je     f0100857 <monitor+0xba>$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	0f be c0             	movsbl %al,%eax$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	50                   	push   %eax$/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	68 a9 1e 10 f0       	push   $0xf0101ea9$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	e8 a1 0e 00 00       	call   f01016a6 <strchr>$/;"	l
f0100805	obj/kern/kernel.asm	/^f0100805:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	85 c0                	test   %eax,%eax$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	75 d7                	jne    f01007e3 <monitor+0x46>$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f010080f	obj/kern/kernel.asm	/^f010080f:	74 46                	je     f0100857 <monitor+0xba>$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	75 14                	jne    f010082a <monitor+0x8d>$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	6a 10                	push   $0x10$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	68 ae 1e 10 f0       	push   $0xf0101eae$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	e8 6e 03 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100828	obj/kern/kernel.asm	/^f0100828:	eb 95                	jmp    f01007bf <monitor+0x22>$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	eb 03                	jmp    f0100836 <monitor+0x99>$/;"	l
f0100833	obj/kern/kernel.asm	/^f0100833:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	84 c0                	test   %al,%al$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	74 ae                	je     f01007eb <monitor+0x4e>$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	0f be c0             	movsbl %al,%eax$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	50                   	push   %eax$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	68 a9 1e 10 f0       	push   $0xf0101ea9$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	e8 58 0e 00 00       	call   f01016a6 <strchr>$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	85 c0                	test   %eax,%eax$/;"	l
f0100853	obj/kern/kernel.asm	/^f0100853:	74 de                	je     f0100833 <monitor+0x96>$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	eb 94                	jmp    f01007eb <monitor+0x4e>$/;"	l
f0100857	obj/kern/kernel.asm	/^f0100857:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	00 $/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	85 f6                	test   %esi,%esi$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	0f 84 58 ff ff ff    	je     f01007bf <monitor+0x22>$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	ff 34 85 80 20 10 f0 	pushl  -0xfefdf80(,%eax,4)$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	e8 c7 0d 00 00       	call   f0101648 <strcmp>$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	85 c0                	test   %eax,%eax$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	75 21                	jne    f01008a9 <monitor+0x10c>$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	52                   	push   %edx$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	56                   	push   %esi$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	ff 14 85 88 20 10 f0 	call   *-0xfefdf78(,%eax,4)$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	85 c0                	test   %eax,%eax$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	78 25                	js     f01008c9 <monitor+0x12c>$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	e9 16 ff ff ff       	jmp    f01007bf <monitor+0x22>$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	83 fb 03             	cmp    $0x3,%ebx$/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	75 bb                	jne    f010086c <monitor+0xcf>$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	68 cb 1e 10 f0       	push   $0xf0101ecb$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	e8 d2 02 00 00       	call   f0100b93 <cprintf>$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008c4	obj/kern/kernel.asm	/^f01008c4:	e9 f6 fe ff ff       	jmp    f01007bf <monitor+0x22>$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	5b                   	pop    %ebx$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	5e                   	pop    %esi$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	5f                   	pop    %edi$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	5d                   	pop    %ebp$/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	c3                   	ret    $/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1 <nvram_read>:$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	55                   	push   %ebp$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	56                   	push   %esi$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	53                   	push   %ebx$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	89 c3                	mov    %eax,%ebx$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	50                   	push   %eax$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	e8 4b 02 00 00       	call   f0100b2c <mc146818_read>$/;"	l
f01008e1	obj/kern/kernel.asm	/^f01008e1:	89 c6                	mov    %eax,%esi$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	e8 3e 02 00 00       	call   f0100b2c <mc146818_read>$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	09 f0                	or     %esi,%eax$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	5b                   	pop    %ebx$/;"	l
f01008f7	obj/kern/kernel.asm	/^f01008f7:	5e                   	pop    %esi$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	5d                   	pop    %ebp$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	c3                   	ret    $/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa <mem_init>:$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	55                   	push   %ebp$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	56                   	push   %esi$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	53                   	push   %ebx$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	e8 c8 ff ff ff       	call   f01008d1 <nvram_read>$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	89 c3                	mov    %eax,%ebx$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	e8 bc ff ff ff       	call   f01008d1 <nvram_read>$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	89 c6                	mov    %eax,%esi$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	e8 b0 ff ff ff       	call   f01008d1 <nvram_read>$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	85 c0                	test   %eax,%eax$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	74 07                	je     f010092f <mem_init+0x35>$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	eb 0b                	jmp    f010093a <mem_init+0x40>$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	8d 86 00 04 00 00    	lea    0x400(%esi),%eax$/;"	l
f0100935	obj/kern/kernel.asm	/^f0100935:	85 f6                	test   %esi,%esi$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	89 c2                	mov    %eax,%edx$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	89 15 48 39 11 f0    	mov    %edx,0xf0113948$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	89 c2                	mov    %eax,%edx$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	29 da                	sub    %ebx,%edx$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	52                   	push   %edx$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	53                   	push   %ebx$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	50                   	push   %eax$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	68 a4 20 10 f0       	push   $0xf01020a4$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	e8 3d 02 00 00       	call   f0100b93 <cprintf>$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	68 e0 20 10 f0       	push   $0xf01020e0$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	68 8b 00 00 00       	push   $0x8b$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	68 30 21 10 f0       	push   $0xf0102130$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	e8 1b f7 ff ff       	call   f0100088 <_panic>$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d <page_init>:$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	55                   	push   %ebp$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	57                   	push   %edi$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	56                   	push   %esi$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	53                   	push   %ebx$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	a1 50 39 11 f0       	mov    0xf0113950,%eax$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	8b 1d 38 35 11 f0    	mov    0xf0113538,%ebx$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	b8 3f 49 11 f0       	mov    $0xf011493f,%eax$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100993	obj/kern/kernel.asm	/^f0100993:	8b 0d 3c 35 11 f0    	mov    0xf011353c,%ecx$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010099e	obj/kern/kernel.asm	/^f010099e:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	e9 88 00 00 00       	jmp    f0100a34 <page_init+0xc7>$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	8d 90 60 ff 0f 00    	lea    0xfff60(%eax),%edx$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01009b5	obj/kern/kernel.asm	/^f01009b5:	81 fa ff ff 05 00    	cmp    $0x5ffff,%edx$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	77 50                	ja     f0100a0d <page_init+0xa0>$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	81 c2 00 00 0a 00    	add    $0xa0000,%edx$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	85 db                	test   %ebx,%ebx$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	75 07                	jne    f01009ce <page_init+0x61>$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	c6 45 e7 01          	movb   $0x1,-0x19(%ebp)$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	77 2d                	ja     f0100a03 <page_init+0x96>$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	74 06                	je     f01009e2 <page_init+0x75>$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	89 1d 38 35 11 f0    	mov    %ebx,0xf0113538$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	89 f0                	mov    %esi,%eax$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	84 c0                	test   %al,%al$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	74 06                	je     f01009ee <page_init+0x81>$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	89 0d 3c 35 11 f0    	mov    %ecx,0xf011353c$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	53                   	push   %ebx$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	68 0c 21 10 f0       	push   $0xf010210c$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	68 10 01 00 00       	push   $0x110$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	68 30 21 10 f0       	push   $0xf0102130$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	e8 85 f6 ff ff       	call   f0100088 <_panic>$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	8d bb 00 00 00 10    	lea    0x10000000(%ebx),%edi$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	39 fa                	cmp    %edi,%edx$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	72 24                	jb     f0100a31 <page_init+0xc4>$/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	89 d6                	mov    %edx,%esi$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	03 35 50 39 11 f0    	add    0xf0113950,%esi$/;"	l
f0100a1c	obj/kern/kernel.asm	/^f0100a1c:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0100a22	obj/kern/kernel.asm	/^f0100a22:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	89 d1                	mov    %edx,%ecx$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	03 0d 50 39 11 f0    	add    0xf0113950,%ecx$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	3b 05 48 39 11 f0    	cmp    0xf0113948,%eax$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	0f 82 6c ff ff ff    	jb     f01009ac <page_init+0x3f>$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	74 06                	je     f0100a4c <page_init+0xdf>$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	89 1d 38 35 11 f0    	mov    %ebx,0xf0113538$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	89 f0                	mov    %esi,%eax$/;"	l
f0100a4e	obj/kern/kernel.asm	/^f0100a4e:	84 c0                	test   %al,%al$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	74 06                	je     f0100a58 <page_init+0xeb>$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	89 0d 3c 35 11 f0    	mov    %ecx,0xf011353c$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	5b                   	pop    %ebx$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	5e                   	pop    %esi$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	5f                   	pop    %edi$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	5d                   	pop    %ebp$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	c3                   	ret    $/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60 <page_alloc>:$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	55                   	push   %ebp$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	5d                   	pop    %ebp$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	c3                   	ret    $/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a <page_free>:$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	55                   	push   %ebp$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	75 05                	jne    f0100a7f <page_free+0x15>$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	74 17                	je     f0100a96 <page_free+0x2c>$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	68 3c 21 10 f0       	push   $0xf010213c$/;"	l
f0100a87	obj/kern/kernel.asm	/^f0100a87:	68 38 01 00 00       	push   $0x138$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	68 30 21 10 f0       	push   $0xf0102130$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	e8 f2 f5 ff ff       	call   f0100088 <_panic>$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	8b 15 3c 35 11 f0    	mov    0xf011353c,%edx$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	89 10                	mov    %edx,(%eax)$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	a3 3c 35 11 f0       	mov    %eax,0xf011353c$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	c9                   	leave  $/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	c3                   	ret    $/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5 <page_decref>:$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	55                   	push   %ebp$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	66 85 c0             	test   %ax,%ax$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	75 0c                	jne    f0100aca <page_decref+0x25>$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	52                   	push   %edx$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	e8 a3 ff ff ff       	call   f0100a6a <page_free>$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	c9                   	leave  $/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	c3                   	ret    $/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc <pgdir_walk>:$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	55                   	push   %ebp$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	89 e5                	mov    %esp,%ebp$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	89 d0                	mov    %edx,%eax$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	03 45 08             	add    0x8(%ebp),%eax$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	75 04                	jne    f0100ae7 <pgdir_walk+0x1b>$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	85 c0                	test   %eax,%eax$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	74 1a                	je     f0100b01 <pgdir_walk+0x35>$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	c1 ea 0a             	shr    $0xa,%edx$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	81 e2 fc 0f 00 00    	and    $0xffc,%edx$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	01 d0                	add    %edx,%eax$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	89 c2                	mov    %eax,%edx$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	83 e2 06             	and    $0x6,%edx$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	eb 05                	jmp    f0100b06 <pgdir_walk+0x3a>$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	5d                   	pop    %ebp$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	c3                   	ret    $/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08 <page_insert>:$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	55                   	push   %ebp$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	5d                   	pop    %ebp$/;"	l
f0100b11	obj/kern/kernel.asm	/^f0100b11:	c3                   	ret    $/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12 <page_lookup>:$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	55                   	push   %ebp$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b15	obj/kern/kernel.asm	/^f0100b15:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	5d                   	pop    %ebp$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	c3                   	ret    $/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c <page_remove>:$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	55                   	push   %ebp$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b1f	obj/kern/kernel.asm	/^f0100b1f:	5d                   	pop    %ebp$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	c3                   	ret    $/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21 <tlb_invalidate>:$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	55                   	push   %ebp$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	0f 01 38             	invlpg (%eax)$/;"	l
f0100b2a	obj/kern/kernel.asm	/^f0100b2a:	5d                   	pop    %ebp$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	c3                   	ret    $/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c <mc146818_read>:$/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	55                   	push   %ebp$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	ee                   	out    %al,(%dx)$/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	ec                   	in     (%dx),%al$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	5d                   	pop    %ebp$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	c3                   	ret    $/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43 <mc146818_write>:$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	55                   	push   %ebp$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	ee                   	out    %al,(%dx)$/;"	l
f0100b4f	obj/kern/kernel.asm	/^f0100b4f:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	ee                   	out    %al,(%dx)$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	5d                   	pop    %ebp$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	c3                   	ret    $/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a <putch>:$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	55                   	push   %ebp$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	e8 95 fa ff ff       	call   f01005fd <cputchar>$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b:	c9                   	leave  $/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	c3                   	ret    $/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d <vcprintf>:$/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	55                   	push   %ebp$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	50                   	push   %eax$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	68 5a 0b 10 f0       	push   $0xf0100b5a$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	e8 c9 03 00 00       	call   f0100f57 <vprintfmt>$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91:	c9                   	leave  $/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	c3                   	ret    $/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93 <cprintf>:$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	55                   	push   %ebp$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	50                   	push   %eax$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	e8 c8 ff ff ff       	call   f0100b6d <vcprintf>$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	c9                   	leave  $/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	c3                   	ret    $/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7 <stab_binsearch>:$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	55                   	push   %ebp$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	57                   	push   %edi$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	56                   	push   %esi$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	53                   	push   %ebx$/;"	l
f0100bad	obj/kern/kernel.asm	/^f0100bad:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	8b 01                	mov    (%ecx),%eax$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	eb 7f                	jmp    f0100c4b <stab_binsearch+0xa4>$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	01 d8                	add    %ebx,%eax$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	89 c6                	mov    %eax,%esi$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	01 c6                	add    %eax,%esi$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	d1 fe                	sar    %esi$/;"	d
f0100bda	obj/kern/kernel.asm	/^f0100bda:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	89 f0                	mov    %esi,%eax$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	eb 03                	jmp    f0100bea <stab_binsearch+0x43>$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	7f 0d                	jg     f0100bfb <stab_binsearch+0x54>$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	39 f9                	cmp    %edi,%ecx$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	75 ee                	jne    f0100be7 <stab_binsearch+0x40>$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	eb 05                	jmp    f0100c00 <stab_binsearch+0x59>$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	eb 4b                	jmp    f0100c4b <stab_binsearch+0xa4>$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	76 11                	jbe    f0100c20 <stab_binsearch+0x79>$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	eb 2b                	jmp    f0100c4b <stab_binsearch+0xa4>$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	73 14                	jae    f0100c39 <stab_binsearch+0x92>$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	89 06                	mov    %eax,(%esi)$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	eb 12                	jmp    f0100c4b <stab_binsearch+0xa4>$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	89 06                	mov    %eax,(%esi)$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	89 c3                	mov    %eax,%ebx$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0100c4e	obj/kern/kernel.asm	/^f0100c4e:	0f 8e 78 ff ff ff    	jle    f0100bcc <stab_binsearch+0x25>$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0100c58	obj/kern/kernel.asm	/^f0100c58:	75 0f                	jne    f0100c69 <stab_binsearch+0xc2>$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	8b 00                	mov    (%eax),%eax$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	89 06                	mov    %eax,(%esi)$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	eb 2c                	jmp    f0100c95 <stab_binsearch+0xee>$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	8b 00                	mov    (%eax),%eax$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0100c73	obj/kern/kernel.asm	/^f0100c73:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	eb 03                	jmp    f0100c81 <stab_binsearch+0xda>$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	39 c8                	cmp    %ecx,%eax$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	7e 0b                	jle    f0100c90 <stab_binsearch+0xe9>$/;"	l
f0100c85	obj/kern/kernel.asm	/^f0100c85:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	39 df                	cmp    %ebx,%edi$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	75 ee                	jne    f0100c7e <stab_binsearch+0xd7>$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	89 06                	mov    %eax,(%esi)$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	5b                   	pop    %ebx$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	5e                   	pop    %esi$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	5f                   	pop    %edi$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	5d                   	pop    %ebp$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	c3                   	ret    $/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d <debuginfo_eip>:$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	55                   	push   %ebp$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	57                   	push   %edi$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	56                   	push   %esi$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	53                   	push   %ebx$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	c7 06 4a 21 10 f0    	movl   $0xf010214a,(%esi)$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	c7 46 08 4a 21 10 f0 	movl   $0xf010214a,0x8(%esi)$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	76 11                	jbe    f0100cea <debuginfo_eip+0x4d>$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	b8 83 81 10 f0       	mov    $0xf0108183,%eax$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	3d d5 65 10 f0       	cmp    $0xf01065d5,%eax$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	77 19                	ja     f0100cfe <debuginfo_eip+0x61>$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	e9 62 01 00 00       	jmp    f0100e4c <debuginfo_eip+0x1af>$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	68 54 21 10 f0       	push   $0xf0102154$/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	6a 7f                	push   $0x7f$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	68 61 21 10 f0       	push   $0xf0102161$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	e8 8a f3 ff ff       	call   f0100088 <_panic>$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	80 3d 82 81 10 f0 00 	cmpb   $0x0,0xf0108182$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	0f 85 48 01 00 00    	jne    f0100e53 <debuginfo_eip+0x1b6>$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	b8 d4 65 10 f0       	mov    $0xf01065d4,%eax$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	2d 80 23 10 f0       	sub    $0xf0102380,%eax$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	57                   	push   %edi$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	6a 64                	push   $0x64$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	b8 80 23 10 f0       	mov    $0xf0102380,%eax$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	e8 66 fe ff ff       	call   f0100ba7 <stab_binsearch>$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	85 c0                	test   %eax,%eax$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	0f 84 0b 01 00 00    	je     f0100e5a <debuginfo_eip+0x1bd>$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	57                   	push   %edi$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	6a 24                	push   $0x24$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	b8 80 23 10 f0       	mov    $0xf0102380,%eax$/;"	l
f0100d69	obj/kern/kernel.asm	/^f0100d69:	e8 39 fe ff ff       	call   f0100ba7 <stab_binsearch>$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	3b 5d d8             	cmp    -0x28(%ebp),%ebx$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	7f 31                	jg     f0100daa <debuginfo_eip+0x10d>$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0100d7f	obj/kern/kernel.asm	/^f0100d7f:	8d 90 80 23 10 f0    	lea    -0xfefdc80(%eax),%edx$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	8b 88 80 23 10 f0    	mov    -0xfefdc80(%eax),%ecx$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	b8 83 81 10 f0       	mov    $0xf0108183,%eax$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	2d d5 65 10 f0       	sub    $0xf01065d5,%eax$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	73 09                	jae    f0100da2 <debuginfo_eip+0x105>$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	81 c1 d5 65 10 f0    	add    $0xf01065d5,%ecx$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	89 4e 08             	mov    %ecx,0x8(%esi)$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	8b 42 08             	mov    0x8(%edx),%eax$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	89 46 10             	mov    %eax,0x10(%esi)$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	eb 06                	jmp    f0100db0 <debuginfo_eip+0x113>$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	6a 3a                	push   $0x3a$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	e8 0a 09 00 00       	call   f01016c7 <strfind>$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	8d 04 85 80 23 10 f0 	lea    -0xfefdc80(,%eax,4),%eax$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	eb 06                	jmp    f0100ddb <debuginfo_eip+0x13e>$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	7c 34                	jl     f0100e13 <debuginfo_eip+0x176>$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	0f b6 50 04          	movzbl 0x4(%eax),%edx$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	74 0b                	je     f0100df3 <debuginfo_eip+0x156>$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	75 e8                	jne    f0100dd5 <debuginfo_eip+0x138>$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	83 78 08 00          	cmpl   $0x0,0x8(%eax)$/;"	l
f0100df1	obj/kern/kernel.asm	/^f0100df1:	74 e2                	je     f0100dd5 <debuginfo_eip+0x138>$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	8b 14 85 80 23 10 f0 	mov    -0xfefdc80(,%eax,4),%edx$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	b8 83 81 10 f0       	mov    $0xf0108183,%eax$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	2d d5 65 10 f0       	sub    $0xf01065d5,%eax$/;"	l
f0100e07	obj/kern/kernel.asm	/^f0100e07:	39 c2                	cmp    %eax,%edx$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	73 08                	jae    f0100e13 <debuginfo_eip+0x176>$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	81 c2 d5 65 10 f0    	add    $0xf01065d5,%edx$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	89 16                	mov    %edx,(%esi)$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	7d 44                	jge    f0100e66 <debuginfo_eip+0x1c9>$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	8d 04 85 80 23 10 f0 	lea    -0xfefdc80(,%eax,4),%eax$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	eb 07                	jmp    f0100e38 <debuginfo_eip+0x19b>$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	83 46 14 01          	addl   $0x1,0x14(%esi)$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100e38	obj/kern/kernel.asm	/^f0100e38:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	74 25                	je     f0100e61 <debuginfo_eip+0x1c4>$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	80 78 04 a0          	cmpb   $0xa0,0x4(%eax)$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	74 ec                	je     f0100e31 <debuginfo_eip+0x194>$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	eb 1a                	jmp    f0100e66 <debuginfo_eip+0x1c9>$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	eb 13                	jmp    f0100e66 <debuginfo_eip+0x1c9>$/;"	l
f0100e53	obj/kern/kernel.asm	/^f0100e53:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	eb 0c                	jmp    f0100e66 <debuginfo_eip+0x1c9>$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	eb 05                	jmp    f0100e66 <debuginfo_eip+0x1c9>$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	5b                   	pop    %ebx$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	5e                   	pop    %esi$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	5f                   	pop    %edi$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	5d                   	pop    %ebp$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	c3                   	ret    $/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e <printnum>:$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	55                   	push   %ebp$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	57                   	push   %edi$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	56                   	push   %esi$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	53                   	push   %ebx$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	89 c7                	mov    %eax,%edi$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	89 d6                	mov    %edx,%esi$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	39 d3                	cmp    %edx,%ebx$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	72 05                	jb     f0100e9e <printnum+0x30>$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	77 45                	ja     f0100ee3 <printnum+0x75>$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0100ea4	obj/kern/kernel.asm	/^f0100ea4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	53                   	push   %ebx$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	e8 2e 0a 00 00       	call   f01018f0 <__udivdi3>$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	83 c4 18             	add    $0x18,%esp$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	52                   	push   %edx$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	50                   	push   %eax$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	89 f2                	mov    %esi,%edx$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	89 f8                	mov    %edi,%eax$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	e8 9e ff ff ff       	call   f0100e6e <printnum>$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	eb 18                	jmp    f0100eed <printnum+0x7f>$/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	56                   	push   %esi$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	ff d7                	call   *%edi$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ee1	obj/kern/kernel.asm	/^f0100ee1:	eb 03                	jmp    f0100ee6 <printnum+0x78>$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100ee9	obj/kern/kernel.asm	/^f0100ee9:	85 db                	test   %ebx,%ebx$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	7f e8                	jg     f0100ed5 <printnum+0x67>$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	56                   	push   %esi$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	e8 1b 0b 00 00       	call   f0101a20 <__umoddi3>$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	0f be 80 6f 21 10 f0 	movsbl -0xfefde91(%eax),%eax$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	50                   	push   %eax$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	ff d7                	call   *%edi$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	5b                   	pop    %ebx$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	5e                   	pop    %esi$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	5f                   	pop    %edi$/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	5d                   	pop    %ebp$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	c3                   	ret    $/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d <sprintputch>:$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	55                   	push   %ebp$/;"	l
f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	8b 10                	mov    (%eax),%edx$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	73 0a                	jae    f0100f38 <sprintputch+0x1b>$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	88 02                	mov    %al,(%edx)$/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38:	5d                   	pop    %ebp$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	c3                   	ret    $/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a <printfmt>:$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	55                   	push   %ebp$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	50                   	push   %eax$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100f4d	obj/kern/kernel.asm	/^f0100f4d:	e8 05 00 00 00       	call   f0100f57 <vprintfmt>$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	c9                   	leave  $/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	c3                   	ret    $/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57 <vprintfmt>:$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	55                   	push   %ebp$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	57                   	push   %edi$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	56                   	push   %esi$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	53                   	push   %ebx$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	eb 12                	jmp    f0100f7d <vprintfmt+0x26>$/;"	l
f0100f6b	obj/kern/kernel.asm	/^f0100f6b:	85 c0                	test   %eax,%eax$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	0f 84 a9 04 00 00    	je     f010141c <vprintfmt+0x4c5>$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	53                   	push   %ebx$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	50                   	push   %eax$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	ff d6                	call   *%esi$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	75 e2                	jne    f0100f6b <vprintfmt+0x14>$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	eb 07                	jmp    f0100fb0 <vprintfmt+0x59>$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100fac	obj/kern/kernel.asm	/^f0100fac:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	3c 55                	cmp    $0x55,%al$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	0f 87 3a 04 00 00    	ja     f0101401 <vprintfmt+0x4aa>$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	ff 24 85 fc 21 10 f0 	jmp    *-0xfefde04(,%eax,4)$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	eb d6                	jmp    f0100fb0 <vprintfmt+0x59>$/;"	l
f0100fda	obj/kern/kernel.asm	/^f0100fda:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	77 3f                	ja     f0101036 <vprintfmt+0xdf>$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	eb e9                	jmp    f0100fe5 <vprintfmt+0x8e>$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	8b 00                	mov    (%eax),%eax$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010100a	obj/kern/kernel.asm	/^f010100a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	eb 2a                	jmp    f010103c <vprintfmt+0xe5>$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	85 c0                	test   %eax,%eax$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	eb 89                	jmp    f0100fb0 <vprintfmt+0x59>$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	e9 7a ff ff ff       	jmp    f0100fb0 <vprintfmt+0x59>$/;"	l
f0101036	obj/kern/kernel.asm	/^f0101036:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	0f 89 6a ff ff ff    	jns    f0100fb0 <vprintfmt+0x59>$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	e9 58 ff ff ff       	jmp    f0100fb0 <vprintfmt+0x59>$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	e9 4d ff ff ff       	jmp    f0100fb0 <vprintfmt+0x59>$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	53                   	push   %ebx$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	ff 30                	pushl  (%eax)$/;"	l
f010106f	obj/kern/kernel.asm	/^f010106f:	ff d6                	call   *%esi$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	e9 fe fe ff ff       	jmp    f0100f7d <vprintfmt+0x26>$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f0101085	obj/kern/kernel.asm	/^f0101085:	8b 00                	mov    (%eax),%eax$/;"	l
f0101087	obj/kern/kernel.asm	/^f0101087:	99                   	cltd   $/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	31 d0                	xor    %edx,%eax$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	29 d0                	sub    %edx,%eax$/;"	l
f010108c	obj/kern/kernel.asm	/^f010108c:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	7f 0b                	jg     f010109c <vprintfmt+0x145>$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	8b 14 85 54 23 10 f0 	mov    -0xfefdcac(,%eax,4),%edx$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	85 d2                	test   %edx,%edx$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	75 1b                	jne    f01010b7 <vprintfmt+0x160>$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	50                   	push   %eax$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	68 87 21 10 f0       	push   $0xf0102187$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	53                   	push   %ebx$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	56                   	push   %esi$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	e8 91 fe ff ff       	call   f0100f3a <printfmt>$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	e9 c6 fe ff ff       	jmp    f0100f7d <vprintfmt+0x26>$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	52                   	push   %edx$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	68 90 21 10 f0       	push   $0xf0102190$/;"	l
f01010bd	obj/kern/kernel.asm	/^f01010bd:	53                   	push   %ebx$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	56                   	push   %esi$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	e8 76 fe ff ff       	call   f0100f3a <printfmt>$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	e9 ab fe ff ff       	jmp    f0100f7d <vprintfmt+0x26>$/;"	l
f01010d2	obj/kern/kernel.asm	/^f01010d2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	83 c0 04             	add    $0x4,%eax$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01010db	obj/kern/kernel.asm	/^f01010db:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	8b 38                	mov    (%eax),%edi$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	85 ff                	test   %edi,%edi$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	b8 80 21 10 f0       	mov    $0xf0102180,%eax$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	0f 8e 94 00 00 00    	jle    f0101188 <vprintfmt+0x231>$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	0f 84 98 00 00 00    	je     f0101196 <vprintfmt+0x23f>$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	57                   	push   %edi$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	e8 73 04 00 00       	call   f010157d <strnlen>$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	29 c1                	sub    %eax,%ecx$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	89 cf                	mov    %ecx,%edi$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	eb 0f                	jmp    f0101132 <vprintfmt+0x1db>$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	53                   	push   %ebx$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	ff d6                	call   *%esi$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	85 ff                	test   %edi,%edi$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	7f ed                	jg     f0101123 <vprintfmt+0x1cc>$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	85 c9                	test   %ecx,%ecx$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	29 c1                	sub    %eax,%ecx$/;"	l
f0101148	obj/kern/kernel.asm	/^f0101148:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	89 cb                	mov    %ecx,%ebx$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	eb 4d                	jmp    f01011a2 <vprintfmt+0x24b>$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	74 1b                	je     f0101176 <vprintfmt+0x21f>$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	0f be c0             	movsbl %al,%eax$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	83 e8 20             	sub    $0x20,%eax$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	76 10                	jbe    f0101176 <vprintfmt+0x21f>$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	6a 3f                	push   $0x3f$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	eb 0d                	jmp    f0101183 <vprintfmt+0x22c>$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	52                   	push   %edx$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	eb 1a                	jmp    f01011a2 <vprintfmt+0x24b>$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	eb 0c                	jmp    f01011a2 <vprintfmt+0x24b>$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	83 c7 01             	add    $0x1,%edi$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	0f be d0             	movsbl %al,%edx$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	85 d2                	test   %edx,%edx$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	74 23                	je     f01011d3 <vprintfmt+0x27c>$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	85 f6                	test   %esi,%esi$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	78 a1                	js     f0101155 <vprintfmt+0x1fe>$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	79 9c                	jns    f0101155 <vprintfmt+0x1fe>$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	89 df                	mov    %ebx,%edi$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	eb 18                	jmp    f01011db <vprintfmt+0x284>$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	53                   	push   %ebx$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	6a 20                	push   $0x20$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	ff d6                	call   *%esi$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	eb 08                	jmp    f01011db <vprintfmt+0x284>$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	89 df                	mov    %ebx,%edi$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01011db	obj/kern/kernel.asm	/^f01011db:	85 ff                	test   %edi,%edi$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	7f e4                	jg     f01011c3 <vprintfmt+0x26c>$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	e9 90 fd ff ff       	jmp    f0100f7d <vprintfmt+0x26>$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	7e 19                	jle    f010120b <vprintfmt+0x2b4>$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	8b 00                	mov    (%eax),%eax$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01011fd	obj/kern/kernel.asm	/^f01011fd:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	eb 38                	jmp    f0101243 <vprintfmt+0x2ec>$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	85 c9                	test   %ecx,%ecx$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	74 1b                	je     f010122a <vprintfmt+0x2d3>$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	8b 00                	mov    (%eax),%eax$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	89 c1                	mov    %eax,%ecx$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	eb 19                	jmp    f0101243 <vprintfmt+0x2ec>$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	8b 00                	mov    (%eax),%eax$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	89 c1                	mov    %eax,%ecx$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	0f 89 75 01 00 00    	jns    f01013cd <vprintfmt+0x476>$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	53                   	push   %ebx$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	6a 2d                	push   $0x2d$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	ff d6                	call   *%esi$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	f7 da                	neg    %edx$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	f7 d9                	neg    %ecx$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	e9 53 01 00 00       	jmp    f01013cd <vprintfmt+0x476>$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	7e 18                	jle    f0101297 <vprintfmt+0x340>$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101282	obj/kern/kernel.asm	/^f0101282:	8b 10                	mov    (%eax),%edx$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	e9 36 01 00 00       	jmp    f01013cd <vprintfmt+0x476>$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	85 c9                	test   %ecx,%ecx$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	74 1a                	je     f01012b5 <vprintfmt+0x35e>$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	8b 10                	mov    (%eax),%edx$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	e9 18 01 00 00       	jmp    f01013cd <vprintfmt+0x476>$/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	8b 10                	mov    (%eax),%edx$/;"	l
f01012ba	obj/kern/kernel.asm	/^f01012ba:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01012c2	obj/kern/kernel.asm	/^f01012c2:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	e9 fe 00 00 00       	jmp    f01013cd <vprintfmt+0x476>$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	7e 19                	jle    f01012ed <vprintfmt+0x396>$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	8b 00                	mov    (%eax),%eax$/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	eb 38                	jmp    f0101325 <vprintfmt+0x3ce>$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	85 c9                	test   %ecx,%ecx$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	74 1b                	je     f010130c <vprintfmt+0x3b5>$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	8b 00                	mov    (%eax),%eax$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	89 c1                	mov    %eax,%ecx$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	eb 19                	jmp    f0101325 <vprintfmt+0x3ce>$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	8b 00                	mov    (%eax),%eax$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	89 c1                	mov    %eax,%ecx$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	0f 89 93 00 00 00    	jns    f01013cd <vprintfmt+0x476>$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	53                   	push   %ebx$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	6a 2d                	push   $0x2d$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	ff d6                	call   *%esi$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	f7 da                	neg    %edx$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	f7 d9                	neg    %ecx$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	eb 74                	jmp    f01013cd <vprintfmt+0x476>$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010135c	obj/kern/kernel.asm	/^f010135c:	53                   	push   %ebx$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	6a 30                	push   $0x30$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	ff d6                	call   *%esi$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	53                   	push   %ebx$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	6a 78                	push   $0x78$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	ff d6                	call   *%esi$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	8b 10                	mov    (%eax),%edx$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010137c	obj/kern/kernel.asm	/^f010137c:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	eb 4a                	jmp    f01013cd <vprintfmt+0x476>$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	7e 15                	jle    f010139d <vprintfmt+0x446>$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	8b 10                	mov    (%eax),%edx$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	eb 30                	jmp    f01013cd <vprintfmt+0x476>$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	85 c9                	test   %ecx,%ecx$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	74 17                	je     f01013b8 <vprintfmt+0x461>$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	8b 10                	mov    (%eax),%edx$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	eb 15                	jmp    f01013cd <vprintfmt+0x476>$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	8b 10                	mov    (%eax),%edx$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01013c8	obj/kern/kernel.asm	/^f01013c8:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	57                   	push   %edi$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	50                   	push   %eax$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	51                   	push   %ecx$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	52                   	push   %edx$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	89 da                	mov    %ebx,%edx$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	89 f0                	mov    %esi,%eax$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	e8 8a fa ff ff       	call   f0100e6e <printnum>$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	83 c4 20             	add    $0x20,%esp$/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	e9 8e fb ff ff       	jmp    f0100f7d <vprintfmt+0x26>$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	53                   	push   %ebx$/;"	l
f01013f3	obj/kern/kernel.asm	/^f01013f3:	52                   	push   %edx$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	ff d6                	call   *%esi$/;"	l
f01013f6	obj/kern/kernel.asm	/^f01013f6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	e9 7c fb ff ff       	jmp    f0100f7d <vprintfmt+0x26>$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	53                   	push   %ebx$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	6a 25                	push   $0x25$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	ff d6                	call   *%esi$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	83 c4 10             	add    $0x10,%esp$/;"	l
f010140c	obj/kern/kernel.asm	/^f010140c:	eb 03                	jmp    f0101411 <vprintfmt+0x4ba>$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	80 7f ff 25          	cmpb   $0x25,-0x1(%edi)$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	75 f7                	jne    f010140e <vprintfmt+0x4b7>$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	e9 61 fb ff ff       	jmp    f0100f7d <vprintfmt+0x26>$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	5b                   	pop    %ebx$/;"	l
f0101420	obj/kern/kernel.asm	/^f0101420:	5e                   	pop    %esi$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	5f                   	pop    %edi$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	5d                   	pop    %ebp$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	c3                   	ret    $/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424 <vsnprintf>:$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	55                   	push   %ebp$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	89 e5                	mov    %esp,%ebp$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	85 c0                	test   %eax,%eax$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	74 26                	je     f010146b <vsnprintf+0x47>$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	85 d2                	test   %edx,%edx$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	7e 22                	jle    f010146b <vsnprintf+0x47>$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	50                   	push   %eax$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	68 1d 0f 10 f0       	push   $0xf0100f1d$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	e8 fa fa ff ff       	call   f0100f57 <vprintfmt>$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101469	obj/kern/kernel.asm	/^f0101469:	eb 05                	jmp    f0101470 <vsnprintf+0x4c>$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	c9                   	leave  $/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	c3                   	ret    $/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472 <snprintf>:$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	55                   	push   %ebp$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	89 e5                	mov    %esp,%ebp$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	50                   	push   %eax$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	e8 9a ff ff ff       	call   f0101424 <vsnprintf>$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	c9                   	leave  $/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	c3                   	ret    $/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c <readline>:$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	55                   	push   %ebp$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	89 e5                	mov    %esp,%ebp$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	57                   	push   %edi$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	56                   	push   %esi$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	53                   	push   %ebx$/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	85 c0                	test   %eax,%eax$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	74 11                	je     f01014ad <readline+0x21>$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	50                   	push   %eax$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	68 90 21 10 f0       	push   $0xf0102190$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	e8 e9 f6 ff ff       	call   f0100b93 <cprintf>$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	6a 00                	push   $0x0$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	e8 67 f1 ff ff       	call   f010061e <iscons>$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	89 c7                	mov    %eax,%edi$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	e8 47 f1 ff ff       	call   f010060d <getchar>$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	89 c3                	mov    %eax,%ebx$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	85 c0                	test   %eax,%eax$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	79 18                	jns    f01014e4 <readline+0x58>$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	50                   	push   %eax$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	68 70 23 10 f0       	push   $0xf0102370$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	e8 b9 f6 ff ff       	call   f0100b93 <cprintf>$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	eb 79                	jmp    f010155d <readline+0xd1>$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	0f 94 c2             	sete   %dl$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	0f 94 c0             	sete   %al$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	08 c2                	or     %al,%dl$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	74 1a                	je     f010150e <readline+0x82>$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	85 f6                	test   %esi,%esi$/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	7e 16                	jle    f010150e <readline+0x82>$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	85 ff                	test   %edi,%edi$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	74 0d                	je     f0101509 <readline+0x7d>$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01014ff	obj/kern/kernel.asm	/^f01014ff:	6a 08                	push   $0x8$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	e8 f7 f0 ff ff       	call   f01005fd <cputchar>$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	83 ee 01             	sub    $0x1,%esi$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	eb b3                	jmp    f01014c1 <readline+0x35>$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	7e 23                	jle    f0101536 <readline+0xaa>$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	7f 1b                	jg     f0101536 <readline+0xaa>$/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	85 ff                	test   %edi,%edi$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	74 0c                	je     f010152b <readline+0x9f>$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	53                   	push   %ebx$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	e8 d5 f0 ff ff       	call   f01005fd <cputchar>$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	83 c4 10             	add    $0x10,%esp$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	88 9e 40 35 11 f0    	mov    %bl,-0xfeecac0(%esi)$/;"	l
f0101531	obj/kern/kernel.asm	/^f0101531:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	eb 8b                	jmp    f01014c1 <readline+0x35>$/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	74 05                	je     f0101540 <readline+0xb4>$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	75 81                	jne    f01014c1 <readline+0x35>$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	85 ff                	test   %edi,%edi$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	74 0d                	je     f0101551 <readline+0xc5>$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	6a 0a                	push   $0xa$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	e8 af f0 ff ff       	call   f01005fd <cputchar>$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	c6 86 40 35 11 f0 00 	movb   $0x0,-0xfeecac0(%esi)$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	b8 40 35 11 f0       	mov    $0xf0113540,%eax$/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	5b                   	pop    %ebx$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	5e                   	pop    %esi$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	5f                   	pop    %edi$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	5d                   	pop    %ebp$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	c3                   	ret    $/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565 <strlen>:$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	55                   	push   %ebp$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	89 e5                	mov    %esp,%ebp$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	eb 03                	jmp    f0101575 <strlen+0x10>$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	75 f7                	jne    f0101572 <strlen+0xd>$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	5d                   	pop    %ebp$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	c3                   	ret    $/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d <strnlen>:$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	55                   	push   %ebp$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	eb 03                	jmp    f0101590 <strnlen+0x13>$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	39 c2                	cmp    %eax,%edx$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	74 08                	je     f010159c <strnlen+0x1f>$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	75 f3                	jne    f010158d <strnlen+0x10>$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	89 d0                	mov    %edx,%eax$/;"	l
f010159c	obj/kern/kernel.asm	/^f010159c:	5d                   	pop    %ebp$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	c3                   	ret    $/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e <strcpy>:$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	55                   	push   %ebp$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	89 e5                	mov    %esp,%ebp$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	53                   	push   %ebx$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	89 c2                	mov    %eax,%edx$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	83 c2 01             	add    $0x1,%edx$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	84 db                	test   %bl,%bl$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	75 ef                	jne    f01015aa <strcpy+0xc>$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	5b                   	pop    %ebx$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	5d                   	pop    %ebp$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	c3                   	ret    $/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be <strcat>:$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	55                   	push   %ebp$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	53                   	push   %ebx$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	53                   	push   %ebx$/;"	l
f01015c6	obj/kern/kernel.asm	/^f01015c6:	e8 9a ff ff ff       	call   f0101565 <strlen>$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	83 c4 04             	add    $0x4,%esp$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	01 d8                	add    %ebx,%eax$/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	50                   	push   %eax$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	e8 c5 ff ff ff       	call   f010159e <strcpy>$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	89 d8                	mov    %ebx,%eax$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de:	c9                   	leave  $/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	c3                   	ret    $/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0 <strncpy>:$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	55                   	push   %ebp$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	56                   	push   %esi$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	53                   	push   %ebx$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01015e8	obj/kern/kernel.asm	/^f01015e8:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01015eb	obj/kern/kernel.asm	/^f01015eb:	89 f3                	mov    %esi,%ebx$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	89 f2                	mov    %esi,%edx$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	eb 0f                	jmp    f0101603 <strncpy+0x23>$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	39 da                	cmp    %ebx,%edx$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	75 ed                	jne    f01015f4 <strncpy+0x14>$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	89 f0                	mov    %esi,%eax$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	5b                   	pop    %ebx$/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	5e                   	pop    %esi$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	5d                   	pop    %ebp$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	c3                   	ret    $/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d <strlcpy>:$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	55                   	push   %ebp$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	56                   	push   %esi$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	53                   	push   %ebx$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	89 f0                	mov    %esi,%eax$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	85 d2                	test   %edx,%edx$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	74 21                	je     f0101642 <strlcpy+0x35>$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	8d 44 16 ff          	lea    -0x1(%esi,%edx,1),%eax$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	89 f2                	mov    %esi,%edx$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	eb 09                	jmp    f0101632 <strlcpy+0x25>$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	83 c2 01             	add    $0x1,%edx$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	39 c2                	cmp    %eax,%edx$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	74 09                	je     f010163f <strlcpy+0x32>$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	84 db                	test   %bl,%bl$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	75 ec                	jne    f0101629 <strlcpy+0x1c>$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	89 d0                	mov    %edx,%eax$/;"	l
f010163f	obj/kern/kernel.asm	/^f010163f:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	29 f0                	sub    %esi,%eax$/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	5b                   	pop    %ebx$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	5e                   	pop    %esi$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	5d                   	pop    %ebp$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	c3                   	ret    $/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648 <strcmp>:$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	55                   	push   %ebp$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	89 e5                	mov    %esp,%ebp$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	eb 06                	jmp    f0101659 <strcmp+0x11>$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	84 c0                	test   %al,%al$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	74 04                	je     f0101664 <strcmp+0x1c>$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	3a 02                	cmp    (%edx),%al$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	74 ef                	je     f0101653 <strcmp+0xb>$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010166a	obj/kern/kernel.asm	/^f010166a:	29 d0                	sub    %edx,%eax$/;"	l
f010166c	obj/kern/kernel.asm	/^f010166c:	5d                   	pop    %ebp$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	c3                   	ret    $/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e <strncmp>:$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	55                   	push   %ebp$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671:	53                   	push   %ebx$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101675	obj/kern/kernel.asm	/^f0101675:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	89 c3                	mov    %eax,%ebx$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	eb 06                	jmp    f0101685 <strncmp+0x17>$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	39 d8                	cmp    %ebx,%eax$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	74 15                	je     f010169e <strncmp+0x30>$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	84 c9                	test   %cl,%cl$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	74 04                	je     f0101694 <strncmp+0x26>$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	74 eb                	je     f010167f <strncmp+0x11>$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	29 d0                	sub    %edx,%eax$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	eb 05                	jmp    f01016a3 <strncmp+0x35>$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	5b                   	pop    %ebx$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	5d                   	pop    %ebp$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	c3                   	ret    $/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6 <strchr>:$/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6:	55                   	push   %ebp$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	eb 07                	jmp    f01016b9 <strchr+0x13>$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	38 ca                	cmp    %cl,%dl$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	74 0f                	je     f01016c5 <strchr+0x1f>$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	84 d2                	test   %dl,%dl$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	75 f2                	jne    f01016b2 <strchr+0xc>$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	5d                   	pop    %ebp$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	c3                   	ret    $/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7 <strfind>:$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	55                   	push   %ebp$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	eb 03                	jmp    f01016d6 <strfind+0xf>$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	38 ca                	cmp    %cl,%dl$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	74 04                	je     f01016e1 <strfind+0x1a>$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	84 d2                	test   %dl,%dl$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	75 f2                	jne    f01016d3 <strfind+0xc>$/;"	l
f01016e1	obj/kern/kernel.asm	/^f01016e1:	5d                   	pop    %ebp$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	c3                   	ret    $/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3 <memset>:$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	55                   	push   %ebp$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	89 e5                	mov    %esp,%ebp$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	57                   	push   %edi$/;"	l
f01016e7	obj/kern/kernel.asm	/^f01016e7:	56                   	push   %esi$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	53                   	push   %ebx$/;"	l
f01016e9	obj/kern/kernel.asm	/^f01016e9:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01016ef	obj/kern/kernel.asm	/^f01016ef:	85 c9                	test   %ecx,%ecx$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	74 36                	je     f0101729 <memset+0x46>$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	75 28                	jne    f0101723 <memset+0x40>$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	75 23                	jne    f0101723 <memset+0x40>$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	89 d3                	mov    %edx,%ebx$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	89 d6                	mov    %edx,%esi$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	89 d0                	mov    %edx,%eax$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	09 f0                	or     %esi,%eax$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	09 c2                	or     %eax,%edx$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	89 d8                	mov    %ebx,%eax$/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	09 d0                	or     %edx,%eax$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	fc                   	cld    $/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	eb 06                	jmp    f0101729 <memset+0x46>$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	fc                   	cld    $/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	89 f8                	mov    %edi,%eax$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	5b                   	pop    %ebx$/;"	l
f010172c	obj/kern/kernel.asm	/^f010172c:	5e                   	pop    %esi$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	5f                   	pop    %edi$/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	5d                   	pop    %ebp$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	c3                   	ret    $/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730 <memmove>:$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	55                   	push   %ebp$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	89 e5                	mov    %esp,%ebp$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	57                   	push   %edi$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	56                   	push   %esi$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	39 c6                	cmp    %eax,%esi$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	73 35                	jae    f0101777 <memmove+0x47>$/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	39 d0                	cmp    %edx,%eax$/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	73 2e                	jae    f0101777 <memmove+0x47>$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	89 d6                	mov    %edx,%esi$/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	09 fe                	or     %edi,%esi$/;"	l
f0101750	obj/kern/kernel.asm	/^f0101750:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	75 13                	jne    f010176b <memmove+0x3b>$/;"	l
f0101758	obj/kern/kernel.asm	/^f0101758:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	75 0e                	jne    f010176b <memmove+0x3b>$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	fd                   	std    $/;"	l
f0101767	obj/kern/kernel.asm	/^f0101767:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0101769	obj/kern/kernel.asm	/^f0101769:	eb 09                	jmp    f0101774 <memmove+0x44>$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	fd                   	std    $/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774:	fc                   	cld    $/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	eb 1d                	jmp    f0101794 <memmove+0x64>$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	89 f2                	mov    %esi,%edx$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	09 c2                	or     %eax,%edx$/;"	l
f010177b	obj/kern/kernel.asm	/^f010177b:	f6 c2 03             	test   $0x3,%dl$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	75 0f                	jne    f010178f <memmove+0x5f>$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	75 0a                	jne    f010178f <memmove+0x5f>$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	89 c7                	mov    %eax,%edi$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	fc                   	cld    $/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	eb 05                	jmp    f0101794 <memmove+0x64>$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	89 c7                	mov    %eax,%edi$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	fc                   	cld    $/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	5e                   	pop    %esi$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	5f                   	pop    %edi$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	5d                   	pop    %ebp$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	c3                   	ret    $/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798 <memcpy>:$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	55                   	push   %ebp$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	89 e5                	mov    %esp,%ebp$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010179e	obj/kern/kernel.asm	/^f010179e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	e8 87 ff ff ff       	call   f0101730 <memmove>$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	c9                   	leave  $/;"	l
f01017aa	obj/kern/kernel.asm	/^f01017aa:	c3                   	ret    $/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab <memcmp>:$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	55                   	push   %ebp$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	56                   	push   %esi$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	53                   	push   %ebx$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	89 c6                	mov    %eax,%esi$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	eb 1a                	jmp    f01017d7 <memcmp+0x2c>$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	38 d9                	cmp    %bl,%cl$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	74 0a                	je     f01017d1 <memcmp+0x26>$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	29 d8                	sub    %ebx,%eax$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	eb 0f                	jmp    f01017e0 <memcmp+0x35>$/;"	l
f01017d1	obj/kern/kernel.asm	/^f01017d1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	39 f0                	cmp    %esi,%eax$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	75 e2                	jne    f01017bd <memcmp+0x12>$/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01017e0	obj/kern/kernel.asm	/^f01017e0:	5b                   	pop    %ebx$/;"	l
f01017e1	obj/kern/kernel.asm	/^f01017e1:	5e                   	pop    %esi$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	5d                   	pop    %ebp$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	c3                   	ret    $/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4 <memfind>:$/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	55                   	push   %ebp$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	53                   	push   %ebx$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	89 c1                	mov    %eax,%ecx$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	03 4d 10             	add    0x10(%ebp),%ecx$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	0f b6 5d 0c          	movzbl 0xc(%ebp),%ebx$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	eb 0a                	jmp    f0101800 <memfind+0x1c>$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	39 da                	cmp    %ebx,%edx$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	74 07                	je     f0101804 <memfind+0x20>$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	72 f2                	jb     f01017f6 <memfind+0x12>$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	5b                   	pop    %ebx$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	5d                   	pop    %ebp$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	c3                   	ret    $/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807 <strtol>:$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	55                   	push   %ebp$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	89 e5                	mov    %esp,%ebp$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	57                   	push   %edi$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	56                   	push   %esi$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	53                   	push   %ebx$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	eb 03                	jmp    f0101818 <strtol+0x11>$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	3c 20                	cmp    $0x20,%al$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	74 f6                	je     f0101815 <strtol+0xe>$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	3c 09                	cmp    $0x9,%al$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	74 f2                	je     f0101815 <strtol+0xe>$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	75 0a                	jne    f0101831 <strtol+0x2a>$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010182f	obj/kern/kernel.asm	/^f010182f:	eb 11                	jmp    f0101842 <strtol+0x3b>$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	75 08                	jne    f0101842 <strtol+0x3b>$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	75 15                	jne    f010185f <strtol+0x58>$/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	75 10                	jne    f010185f <strtol+0x58>$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	75 7c                	jne    f01018d1 <strtol+0xca>$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	eb 16                	jmp    f0101875 <strtol+0x6e>$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	85 db                	test   %ebx,%ebx$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	75 12                	jne    f0101875 <strtol+0x6e>$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	75 08                	jne    f0101875 <strtol+0x6e>$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	89 f3                	mov    %esi,%ebx$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	77 08                	ja     f0101892 <strtol+0x8b>$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	0f be d2             	movsbl %dl,%edx$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	eb 22                	jmp    f01018b4 <strtol+0xad>$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	89 f3                	mov    %esi,%ebx$/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	77 08                	ja     f01018a4 <strtol+0x9d>$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	0f be d2             	movsbl %dl,%edx$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	83 ea 57             	sub    $0x57,%edx$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	eb 10                	jmp    f01018b4 <strtol+0xad>$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	89 f3                	mov    %esi,%ebx$/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	77 16                	ja     f01018c4 <strtol+0xbd>$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	0f be d2             	movsbl %dl,%edx$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	83 ea 37             	sub    $0x37,%edx$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	7d 0b                	jge    f01018c4 <strtol+0xbd>$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	01 d0                	add    %edx,%eax$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	eb b9                	jmp    f010187d <strtol+0x76>$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	74 0d                	je     f01018d7 <strtol+0xd0>$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	89 0e                	mov    %ecx,(%esi)$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	eb 06                	jmp    f01018d7 <strtol+0xd0>$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	85 db                	test   %ebx,%ebx$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	74 98                	je     f010186d <strtol+0x66>$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	eb 9e                	jmp    f0101875 <strtol+0x6e>$/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7:	89 c2                	mov    %eax,%edx$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	f7 da                	neg    %edx$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	85 ff                	test   %edi,%edi$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	5b                   	pop    %ebx$/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	5e                   	pop    %esi$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	5f                   	pop    %edi$/;"	l
f01018e3	obj/kern/kernel.asm	/^f01018e3:	5d                   	pop    %ebp$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	c3                   	ret    $/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	66 90                	xchg   %ax,%ax$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	66 90                	xchg   %ax,%ax$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	66 90                	xchg   %ax,%ax$/;"	l
f01018eb	obj/kern/kernel.asm	/^f01018eb:	66 90                	xchg   %ax,%ax$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	66 90                	xchg   %ax,%ax$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	90                   	nop$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0 <__udivdi3>:$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	55                   	push   %ebp$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	57                   	push   %edi$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	56                   	push   %esi$/;"	l
f01018f3	obj/kern/kernel.asm	/^f01018f3:	53                   	push   %ebx$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	85 f6                	test   %esi,%esi$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010190d	obj/kern/kernel.asm	/^f010190d:	89 ca                	mov    %ecx,%edx$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	89 f8                	mov    %edi,%eax$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	75 3d                	jne    f0101950 <__udivdi3+0x60>$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	39 cf                	cmp    %ecx,%edi$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	0f 87 c5 00 00 00    	ja     f01019e0 <__udivdi3+0xf0>$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	85 ff                	test   %edi,%edi$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	89 fd                	mov    %edi,%ebp$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	75 0b                	jne    f010192c <__udivdi3+0x3c>$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	31 d2                	xor    %edx,%edx$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	f7 f7                	div    %edi$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	89 c5                	mov    %eax,%ebp$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	89 c8                	mov    %ecx,%eax$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	31 d2                	xor    %edx,%edx$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	f7 f5                	div    %ebp$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	89 c1                	mov    %eax,%ecx$/;"	l
f0101934	obj/kern/kernel.asm	/^f0101934:	89 d8                	mov    %ebx,%eax$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	89 cf                	mov    %ecx,%edi$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	f7 f5                	div    %ebp$/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a:	89 c3                	mov    %eax,%ebx$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	89 d8                	mov    %ebx,%eax$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	89 fa                	mov    %edi,%edx$/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	5b                   	pop    %ebx$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	5e                   	pop    %esi$/;"	l
f0101945	obj/kern/kernel.asm	/^f0101945:	5f                   	pop    %edi$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	5d                   	pop    %ebp$/;"	l
f0101947	obj/kern/kernel.asm	/^f0101947:	c3                   	ret    $/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	90                   	nop$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	39 ce                	cmp    %ecx,%esi$/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	77 74                	ja     f01019c8 <__udivdi3+0xd8>$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	0f 84 98 00 00 00    	je     f01019f8 <__udivdi3+0x108>$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	89 f9                	mov    %edi,%ecx$/;"	l
f0101967	obj/kern/kernel.asm	/^f0101967:	89 c5                	mov    %eax,%ebp$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	29 fb                	sub    %edi,%ebx$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	d3 e6                	shl    %cl,%esi$/;"	d
f010196d	obj/kern/kernel.asm	/^f010196d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0101971	obj/kern/kernel.asm	/^f0101971:	89 f9                	mov    %edi,%ecx$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	d3 e0                	shl    %cl,%eax$/;"	d
f0101975	obj/kern/kernel.asm	/^f0101975:	09 ee                	or     %ebp,%esi$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	89 d5                	mov    %edx,%ebp$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	d3 ed                	shr    %cl,%ebp$/;"	d
f0101985	obj/kern/kernel.asm	/^f0101985:	89 f9                	mov    %edi,%ecx$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	d3 e2                	shl    %cl,%edx$/;"	d
f0101989	obj/kern/kernel.asm	/^f0101989:	89 d9                	mov    %ebx,%ecx$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	d3 e8                	shr    %cl,%eax$/;"	d
f010198d	obj/kern/kernel.asm	/^f010198d:	09 c2                	or     %eax,%edx$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	89 d0                	mov    %edx,%eax$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	89 ea                	mov    %ebp,%edx$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	f7 f6                	div    %esi$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	89 d5                	mov    %edx,%ebp$/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	89 c3                	mov    %eax,%ebx$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	72 10                	jb     f01019b1 <__udivdi3+0xc1>$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	89 f9                	mov    %edi,%ecx$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	d3 e6                	shl    %cl,%esi$/;"	d
f01019a9	obj/kern/kernel.asm	/^f01019a9:	39 c6                	cmp    %eax,%esi$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	73 07                	jae    f01019b4 <__udivdi3+0xc4>$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	39 d5                	cmp    %edx,%ebp$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	75 03                	jne    f01019b4 <__udivdi3+0xc4>$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01019b4	obj/kern/kernel.asm	/^f01019b4:	31 ff                	xor    %edi,%edi$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	89 d8                	mov    %ebx,%eax$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	89 fa                	mov    %edi,%edx$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	5b                   	pop    %ebx$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	5e                   	pop    %esi$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	5f                   	pop    %edi$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	5d                   	pop    %ebp$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	c3                   	ret    $/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	31 ff                	xor    %edi,%edi$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	31 db                	xor    %ebx,%ebx$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	89 d8                	mov    %ebx,%eax$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	89 fa                	mov    %edi,%edx$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	5b                   	pop    %ebx$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	5e                   	pop    %esi$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	5f                   	pop    %edi$/;"	l
f01019d6	obj/kern/kernel.asm	/^f01019d6:	5d                   	pop    %ebp$/;"	l
f01019d7	obj/kern/kernel.asm	/^f01019d7:	c3                   	ret    $/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	90                   	nop$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	89 d8                	mov    %ebx,%eax$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	f7 f7                	div    %edi$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	31 ff                	xor    %edi,%edi$/;"	l
f01019e6	obj/kern/kernel.asm	/^f01019e6:	89 c3                	mov    %eax,%ebx$/;"	l
f01019e8	obj/kern/kernel.asm	/^f01019e8:	89 d8                	mov    %ebx,%eax$/;"	l
f01019ea	obj/kern/kernel.asm	/^f01019ea:	89 fa                	mov    %edi,%edx$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01019ef	obj/kern/kernel.asm	/^f01019ef:	5b                   	pop    %ebx$/;"	l
f01019f0	obj/kern/kernel.asm	/^f01019f0:	5e                   	pop    %esi$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	5f                   	pop    %edi$/;"	l
f01019f2	obj/kern/kernel.asm	/^f01019f2:	5d                   	pop    %ebp$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	c3                   	ret    $/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	39 ce                	cmp    %ecx,%esi$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	72 0c                	jb     f0101a08 <__udivdi3+0x118>$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	31 db                	xor    %ebx,%ebx$/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	0f 87 34 ff ff ff    	ja     f010193c <__udivdi3+0x4c>$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	e9 2a ff ff ff       	jmp    f010193c <__udivdi3+0x4c>$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	66 90                	xchg   %ax,%ax$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	66 90                	xchg   %ax,%ax$/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	66 90                	xchg   %ax,%ax$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	66 90                	xchg   %ax,%ax$/;"	l
f0101a1a	obj/kern/kernel.asm	/^f0101a1a:	66 90                	xchg   %ax,%ax$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	66 90                	xchg   %ax,%ax$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	66 90                	xchg   %ax,%ax$/;"	l
f0101a20	obj/kern/kernel.asm	/^f0101a20 <__umoddi3>:$/;"	l
f0101a20	obj/kern/kernel.asm	/^f0101a20:	55                   	push   %ebp$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	57                   	push   %edi$/;"	l
f0101a22	obj/kern/kernel.asm	/^f0101a22:	56                   	push   %esi$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	53                   	push   %ebx$/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101a27	obj/kern/kernel.asm	/^f0101a27:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0101a37	obj/kern/kernel.asm	/^f0101a37:	85 d2                	test   %edx,%edx$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0101a3d	obj/kern/kernel.asm	/^f0101a3d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	89 f3                	mov    %esi,%ebx$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	75 1c                	jne    f0101a68 <__umoddi3+0x48>$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	39 f7                	cmp    %esi,%edi$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	76 50                	jbe    f0101aa0 <__umoddi3+0x80>$/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	89 c8                	mov    %ecx,%eax$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	89 f2                	mov    %esi,%edx$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	f7 f7                	div    %edi$/;"	l
f0101a56	obj/kern/kernel.asm	/^f0101a56:	89 d0                	mov    %edx,%eax$/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	31 d2                	xor    %edx,%edx$/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	5b                   	pop    %ebx$/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	5e                   	pop    %esi$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	5f                   	pop    %edi$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	5d                   	pop    %ebp$/;"	l
f0101a61	obj/kern/kernel.asm	/^f0101a61:	c3                   	ret    $/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	39 f2                	cmp    %esi,%edx$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	89 d0                	mov    %edx,%eax$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	77 52                	ja     f0101ac0 <__umoddi3+0xa0>$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	75 5a                	jne    f0101ad0 <__umoddi3+0xb0>$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	0f 82 e0 00 00 00    	jb     f0101b60 <__umoddi3+0x140>$/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	0f 86 d7 00 00 00    	jbe    f0101b60 <__umoddi3+0x140>$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0101a8d	obj/kern/kernel.asm	/^f0101a8d:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	5b                   	pop    %ebx$/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	5e                   	pop    %esi$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	5f                   	pop    %edi$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	5d                   	pop    %ebp$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	c3                   	ret    $/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	85 ff                	test   %edi,%edi$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	89 fd                	mov    %edi,%ebp$/;"	l
f0101aa4	obj/kern/kernel.asm	/^f0101aa4:	75 0b                	jne    f0101ab1 <__umoddi3+0x91>$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	31 d2                	xor    %edx,%edx$/;"	l
f0101aad	obj/kern/kernel.asm	/^f0101aad:	f7 f7                	div    %edi$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	89 c5                	mov    %eax,%ebp$/;"	l
f0101ab1	obj/kern/kernel.asm	/^f0101ab1:	89 f0                	mov    %esi,%eax$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	31 d2                	xor    %edx,%edx$/;"	l
f0101ab5	obj/kern/kernel.asm	/^f0101ab5:	f7 f5                	div    %ebp$/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	89 c8                	mov    %ecx,%eax$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	f7 f5                	div    %ebp$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	89 d0                	mov    %edx,%eax$/;"	l
f0101abd	obj/kern/kernel.asm	/^f0101abd:	eb 99                	jmp    f0101a58 <__umoddi3+0x38>$/;"	l
f0101abf	obj/kern/kernel.asm	/^f0101abf:	90                   	nop$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	89 c8                	mov    %ecx,%eax$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	89 f2                	mov    %esi,%edx$/;"	l
f0101ac4	obj/kern/kernel.asm	/^f0101ac4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	5b                   	pop    %ebx$/;"	l
f0101ac8	obj/kern/kernel.asm	/^f0101ac8:	5e                   	pop    %esi$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	5f                   	pop    %edi$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	5d                   	pop    %ebp$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	c3                   	ret    $/;"	l
f0101acc	obj/kern/kernel.asm	/^f0101acc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0101ad8	obj/kern/kernel.asm	/^f0101ad8:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101ada	obj/kern/kernel.asm	/^f0101ada:	29 ef                	sub    %ebp,%edi$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	d3 e0                	shl    %cl,%eax$/;"	d
f0101ade	obj/kern/kernel.asm	/^f0101ade:	89 f9                	mov    %edi,%ecx$/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0:	89 f2                	mov    %esi,%edx$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	d3 ea                	shr    %cl,%edx$/;"	d
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101ae6	obj/kern/kernel.asm	/^f0101ae6:	09 c2                	or     %eax,%edx$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	89 d8                	mov    %ebx,%eax$/;"	l
f0101aea	obj/kern/kernel.asm	/^f0101aea:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	89 f2                	mov    %esi,%edx$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	d3 e2                	shl    %cl,%edx$/;"	d
f0101af1	obj/kern/kernel.asm	/^f0101af1:	89 f9                	mov    %edi,%ecx$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	d3 e8                	shr    %cl,%eax$/;"	d
f0101afd	obj/kern/kernel.asm	/^f0101afd:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	89 c6                	mov    %eax,%esi$/;"	l
f0101b01	obj/kern/kernel.asm	/^f0101b01:	d3 e3                	shl    %cl,%ebx$/;"	d
f0101b03	obj/kern/kernel.asm	/^f0101b03:	89 f9                	mov    %edi,%ecx$/;"	l
f0101b05	obj/kern/kernel.asm	/^f0101b05:	89 d0                	mov    %edx,%eax$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	d3 e8                	shr    %cl,%eax$/;"	d
f0101b09	obj/kern/kernel.asm	/^f0101b09:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	09 d8                	or     %ebx,%eax$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	89 d3                	mov    %edx,%ebx$/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	89 f2                	mov    %esi,%edx$/;"	l
f0101b11	obj/kern/kernel.asm	/^f0101b11:	f7 34 24             	divl   (%esp)$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	89 d6                	mov    %edx,%esi$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	d3 e3                	shl    %cl,%ebx$/;"	d
f0101b18	obj/kern/kernel.asm	/^f0101b18:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	39 d6                	cmp    %edx,%esi$/;"	l
f0101b1e	obj/kern/kernel.asm	/^f0101b1e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	89 d1                	mov    %edx,%ecx$/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b26	obj/kern/kernel.asm	/^f0101b26:	72 08                	jb     f0101b30 <__umoddi3+0x110>$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	75 11                	jne    f0101b3b <__umoddi3+0x11b>$/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	73 0b                	jae    f0101b3b <__umoddi3+0x11b>$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0101b37	obj/kern/kernel.asm	/^f0101b37:	89 d1                	mov    %edx,%ecx$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f0101b3f	obj/kern/kernel.asm	/^f0101b3f:	29 da                	sub    %ebx,%edx$/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	19 ce                	sbb    %ecx,%esi$/;"	l
f0101b43	obj/kern/kernel.asm	/^f0101b43:	89 f9                	mov    %edi,%ecx$/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	89 f0                	mov    %esi,%eax$/;"	l
f0101b47	obj/kern/kernel.asm	/^f0101b47:	d3 e0                	shl    %cl,%eax$/;"	d
f0101b49	obj/kern/kernel.asm	/^f0101b49:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	d3 ea                	shr    %cl,%edx$/;"	d
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	d3 ee                	shr    %cl,%esi$/;"	d
f0101b51	obj/kern/kernel.asm	/^f0101b51:	09 d0                	or     %edx,%eax$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	89 f2                	mov    %esi,%edx$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101b58	obj/kern/kernel.asm	/^f0101b58:	5b                   	pop    %ebx$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	5e                   	pop    %esi$/;"	l
f0101b5a	obj/kern/kernel.asm	/^f0101b5a:	5f                   	pop    %edi$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	5d                   	pop    %ebp$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	c3                   	ret    $/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	29 f9                	sub    %edi,%ecx$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	19 d6                	sbb    %edx,%esi$/;"	l
f0101b64	obj/kern/kernel.asm	/^f0101b64:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	e9 18 ff ff ff       	jmp    f0101a89 <__umoddi3+0x69>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fs_test	fs/test.c	/^fs_test(void)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[] =$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
long	obj/kern/kernel.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
main	user/pointers.c	/^main(int ac, char **av)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^                                num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^                        num = getint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	73;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon5	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon5	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
zero	user/divzero.c	/^int zero;$/;"	v
